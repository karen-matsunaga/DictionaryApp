{
  "words": [
    {
      "wordId": 1,
      "name": "Escreva",
      "type": "Função ou Método",
      "description": "Mostrar algo na tela.",
      "synonyms": "Print, Console.Write, System.out.println.",
      "portugol": "programa {\n  funcao inicio() {\n    escreva(\"Olá, mundo!\")\n  }\n}",
      "cSharp": "using System;\n namespace MyApplication\n{\nclass Program\n{\nstatic void Main(string[]args)\n{\nConsole.WriteLine(\"Olá, mundo!\");\n}\n}\n}\n",
      "java": "public class Main { \npublic static void main(String[] args) { \nSystem.out.println(\"Olá, mundo!\"); \n} \n}",
      "python": "print('Olá, mundo!')\nprint(\"Olá, mundo!\")",
      "exit": "Olá, mundo!"
    },
    {
      "wordId": 2,
      "name": "Leia",
      "type": "Função",
      "description": "A variável será lida pelo que foi recebida do escreva.",
      "synonyms": "Input, System.out.println, Console.Read",
      "portugol": "programa{\nfuncao inicio (){\ncadeia texto\nescreva(\"Digite um texto: \")\nleia(texto)\n escreva(\"O texto digitado foi: \", texto\") }\n}",
      "cSharp": "using System;\n namespace Input {\n class Input {\nstatic void Main(string[] args){\n Console.WriteLine(\"Digite um texto: \");\nstring? texto = Console.ReadLine();\nConsole.WriteLine($\"O texto digitado foi: {texto}\");\n}\n}}",
      "java": "import java.util.Scanner;\n class Texto {\n  public static void main(String[] args) {\n    Scanner myObj = new Scanner(System.in);\n System.out.println(\"Digite um texto: \");\n String texto = myObj.nextLine();\n  System.out.println(\"O texto digitado foi: \" + texto);\n}\n}",
      "python": "texto = input(\"Digite um texto: \")\nprint(f\"O texto digitado foi: {texto}\")",
      "exit": "Exemplo"
    },
    {
      "wordId": 3,
      "name": "Adição",
      "type": "Operador aritmético",
      "description": "Operador para somar as variáveis.",
      "synonyms": "+",
      "portugol": "programa {\n funcao inicio() {\n inteiro a = 1\n inteiro b = 2\n  escreva(a + b)\n  }\n}",
      "cSharp": "int a = 1, b= 2;\nConsole.WriteLine(a + b);",
      "java": "public class Soma {\npublic static void main(String[] args) {\nint a = 1;\nint b = 2;\nint total = (a + b);\n\tSystem.out.println(+total);\n}\n}",
      "python": "a = 1\nb = 2\nprint($'{a} + {b}')",
      "exit": "3"
    },
    {
      "wordId": 4,
      "name": "Subtração",
      "type": "Operador aritmético",
      "description": "Operador para subtrair as variáveis.",
      "synonyms": "-",
      "portugol": "programa {\n funcao inicio() {\n inteiro a = 2\n inteiro b = 1\n  escreva(a - b)\n  }\n}",
      "python": "a = 2\nb = 1\nprint($'{a} - {b}')",
      "cSharp": "int a = 2, b= 1;\nConsole.WriteLine(a - b);",
      "java": "public class Subtracao {\npublic static void main(String[] args) {\nint a = 2;\nint b = 1;\nint total = (a - b);\nSystem.out.println(-total);\n}\n}",
      "exit": "1"
    },
    {
      "wordId": 5,
      "name": "Divisão",
      "type": "Operador aritmético",
      "description": "Operador para dividir as variáveis.",
      "synonyms": "/",
      "portugol": "programa {\n funcao inicio() {\n inteiro a = 1\n inteiro b = 1\n  escreva(a / b)\n  }\n}",
      "python": "a = 2\nb = 1\nprint($'{a} / {b}')",
      "cSharp": "int a = 1, b= 1;\nConsole.WriteLine(a / b);",
      "java": "public class Divisao {\npublic static void main(String[] args) {\nint a = 1;\nint b = 1;\nint total = a / b;\nSystem.out.println(total);\n}\n}",
      "exit": "1"
    },
    {
      "wordId": 6,
      "name": "Multiplicação",
      "type": "Operador aritmético",
      "description": "Operador para multiplicar as variáveis.",
      "synonyms": "*",
      "portugol": "programa {\n funcao inicio() {\n inteiro a = 10\n inteiro b = 10\n  escreva(a * b)\n  }\n}",
      "python": "a = 10\nb = 10\nprint($'{a} * {b}')",
      "cSharp": "int a = 10, b= 10;\nConsole.WriteLine(a * b);",
      "java": "public class Multiplicacao {\npublic static void main(String[] args) {\nint a = 10;\nint b = 10;\nint total = a * b;\nSystem.out.println(total);\n}\n}",
      "exit": "100"
    },
    {
      "wordId": 7,
      "name": "Módulo",
      "type": "Operador aritmético",
      "description": "O resultado final é o resto da divisão.",
      "synonyms": "%, mod",
      "portugol": "programa {\nfuncao inicio() {\ninteiro x = 5\ninteiro y = 2\nescreva(x % y)}\n}",
      "cSharp": "using System;\nnamespace Modulus{\nclass Modulus{\nstatic void Main(string[] args){\nint x = 5;\nint y = 2;\nConsole.WriteLine(x % y);}\n}\n}",
      "java": "public class Modulus {\npublic static void main(String[] args) {\nint x = 5;\nint y = 2;\nSystem.out.println(x % y);\n}\n}",
      "python": "x = 5\ny = 2\nprint(x % y)\n",
      "exit": "1"
    },
    {
      "wordId": 8,
      "name": "Se",
      "type": "Estrutura Condicional",
      "description": "Avaliar se a expressão é verdadeira ou falsa.",
      "synonyms": "If",
      "portugol": "programa {\n  funcao inicio() {\n     se (20 > 18) {\n      escreva(\"20 é maior que 18!\")\n     }\n  }\n}",
      "python": "if 20 > 18:\nprint('20 é maior que 18')\nprint(\"20 é maior que 18!\")",
      "cSharp": "int value = 20;\nif (value > 18)\n{\nConsole.WriteLine(\"20 é maior que 18!\");\n}",
      "java": "public class Se {\npublic static void main(String[] args) {\nif(20 > 18) {\nSystem.out.println(\"20 é maior que 18!\");\n}\n}",
      "exit": "20 é maior que 18!"
    },
    {
      "wordId": 9,
      "name": "Então",
      "type": "Estrutura Condicional",
      "description": "Caso a estrutura condicional se é falsa é feita a segunda verificação caso a expressão é verdadeira ou falsa.",
      "synonyms": "Else",
      "portugol": "programa {\n  funcao inicio() {\n     se (20 < 18) {\n      escreva(\"Valor FALSO\")\n     }\n     senao  {\n      escreva(\"Valor VERDADEIRO\")\n     }\n  }\n}",
      "python": "if 20 < 18:\n    print('Valor FALSO')\nelse:\n    print('Valor VERDADEIRO')",
      "cSharp": "int value = 20;\nif (value > 18)\n{\nConsole.WriteLine(\"20 é maior que 18\");\n}",
      "java": "class Entao {\npublic static void main(String[] args) {\nint a, b;\na = 20;\nb = 20;\nif (a != b) {\nSystem.out.println(\"O resultado é VERDADEIRO!\");\n}\nelse {\nSystem.out.println(\"O resultado é FALSO!\");\n}\n}\n}\n",
      "exit": "O resultado é VERDADEIRO!"
    },
    {
      "wordId": 10,
      "name": "Se então",
      "type": "Estrutura Condicional",
      "description": "A primeira e segunda verificação são falsas será realizada a terceira retornando verdadeira ou falsa.",
      "synonyms": "Else if, Elif",
      "portugol": "programa {\n  funcao inicio() {\n     se (20 < 18) {\n      escreva(\"Valor falso\")\n     }\n     senao  {\n      escreva(\"Valor verdadeiro\")\n     }\n  }\n}",
      "python": "a = 1\nb = 2\nif (a == b):\nprint(f'{a} são IDÊNTICOS {b}!')\nelif (a < b):\nprint(f'{a} é MENOR que {b}!')\nelse:\n print('Os valores são diferentes')",
      "cSharp": "namespace System;\nclass Seentao {\npublic static void Main(String[] args){\nint a = 20;\nint b = 18;\nif(a == b){\nConsole.WriteLine($\"{a} são IDÊNTICOS {b}!\");}\nelse if (a != b){\nConsole.WriteLine($\"{a} é MENOR que {b}\");}\nelse{\nConsole.WriteLine(\"Os valores são diferentes\");}\n}\n}",
      "java": "class EntaoSe {\npublic static void main(String[] args) {\nint a = 1;\nint b = 2;\nif (a == b) {\nSystem.out.println(a+\" são IDÊNTICOS \"+b+\"!\");}\n else if (a < b){\nSystem.out.println(a+\" é MENOR que \"+b+\"!\");\n}\nelse {\nSystem.out.println(\"Os valores são diferentes\");\n}\n}\n}",
      "exit": "1 é MENOR que 2!"
    },
    {
      "wordId": 11,
      "name": "Lista",
      "type": "Coleção",
      "description": "Uma lista armazena vários dados usando [] e a separação por vírgula ,.",
      "synonyms": "ArrayList, []",
      "portugol": "escreva(\"Olá, mundo!\")",
      "python": "list = ['João', 'Maria', 'Pedro']\nprint(list[0:3])",
      "cSharp": "namespace List{\nclass List{\nstatic void Main(String[] args){\nList<String> names = [\"João\", \"Maria\", \"Pedro\"];\nforeach (String name in names) { Console.Write($\"{name} \"); }\n}\n}\n}",
      "java": "class Array {\npublic static void main(String[] args) {\nint a, b;\na = 20;\nb = 20;\nif (a != b) {\n System.out.println(name);\n}\n}\n}\n",
      "exit": "[João, Maria, Pedro]"
    },
    {
      "wordId": 12,
      "name": "Objeto",
      "type": "Programação Orientada a Objetos",
      "description": "Instância concreta da classe com representação real de uma entidade específica com características e comportamentos próprias.",
      "synonyms": "class",
      "portugol": "escreva(\"Olá, mundo!\")",
      "python": "class Car:\ncolor = \"Vermelho\"\ncarro = Car()\nprint(carro.color)",
      "cSharp": "using System;\nnamespace Classe{\nclass Car{\nstring color =  \"Vermelho\";\nstatic void Main(string[] args){\nCar carro = new Car();\nConsole.WriteLine(carro.color);\n}\n}\n}",
      "java": "public class Car {\nString color = \"Vermelho\";\npublic static void main(String[] args){\nCar carro = new Car();\nSystem.out.println(carro.color);\n}\n}",
      "exit": "Vermelho"
    },
    {
      "wordId": 13,
      "name": "Para",
      "type": "Estrutura de repetição",
      "description": "Laço de repetição que percorre os itens armazenados em uma coleção.",
      "synonyms": "For",
      "portugol": "programa {\nfuncao inicio() {\npara (inteiro i = 0; i < 5; i++) {\nescreva(i, \"\n\")}\n  }\n}",
      "python": "for i in range(5):\nprint(i)",
      "cSharp": "using System;\nnamespace For{\npublic class For{\nstatic void Main(string[] args){\n              for (int i = 0; i < 5; i++){\nConsole.WriteLine(i);\n}\n}\n}\n}",
      "java": "public class For {\npublic static void main(String[] args) {\nfor (int i = 0; i < 5; i++) {\nSystem.out.println(i);}\n}\n}",
      "exit": "0\n1\n2\n3\n4"
    },
    {
      "wordId": 14,
      "name": "Enquanto",
      "type": "Estrutura de repetição",
      "description": "Laço de repetição que depende de uma condição.",
      "synonyms": "true, false",
      "portugol": "i = 0\nwhile i < 5:\nprint(i)\ni += 1",
      "python": "i = 0\nwhile i < 5:\n  print(i)\n  i += 1",
      "cSharp": "using System;\nnamespace MyApplication {\nclass Program {\nstatic void Main(string[] args) {\nint i = 0;\nwhile (i < 5) {\nConsole.WriteLine(i);\ni++;\n}\n}\n}\n}",
      "java": "public class While {\npublic static void main(String[] args) {\nint i = 0;\nwhile (i < 5) {\nSystem.out.println(i);\ni++;\n}\n}\n}",
      "exit": "0\n1\n2\n3\n4"
    },
    {
      "wordId": 15,
      "name": "Texto",
      "type": "Tipo",
      "description": "Armazenar dezena de caracteres como sentenças, nomes etc.",
      "synonyms": "String, Cadeia",
      "portugol": "programa {\n  funcao inicio() {\ncadeia nome\n escreva(\"Digite um nome: \")\nleia(nome)\n   escreva(\"O nome digitado foi: \", nome)\n}\n}",
      "cSharp": "using System;\nnamespace Texto {\nclass String{\nstatic void Main(string[] args){\nConsole.Write(\"Digite o seu nome: \");\nstring? name = Console.ReadLine();\nConsole.WriteLine($\"O nome digitado foi: {name}\");\n}\n}\n}\n",
      "java": "public class Name { public static void main(String[] args) { ... } }",
      "python": "name = input('Digite o seu nome: ')\nprint(f'O nome digitado foi: {name}')",
      "exit": "Exemplo"
    },
    {
      "wordId": 16,
      "name": "Inteiro",
      "type": "Tipo primitivo",
      "description": "Exibir somente os números inteiros na tela.",
      "synonyms": "Int",
      "portugol": "programa {\n funcao inicio() {\n inteiro = 5\n escreva(inteiro)\n}} ",
      "cSharp": "using System;\nnamespace Inteiro {class Inteiro {static void Main(string[] args) {int numero = 5;\nConsole.WriteLine(numero)}\n}\n}",
      "java": "public class Inteiro { public static void main(String[] args) {int numero=5;\nSystem.out.println(numero);}\n}",
      "python": "numero = 5\nprint(type(numero))",
      "exit": "Int"
    },
    {
      "wordId": 18,
      "name": "Real",
      "type": "Tipo primitivo",
      "description": "Mostrar somente os números reais na tela.",
      "synonyms": "Double, Float",
      "portugol": "programa {\nfuncao inicio() {\nreal salario = 5800.5, altura = 1.63\nescreva(\"SALARIO = \", salario, \"\n\")\nescreva(\"ALTURA = \", altura, \"\n\")\n}\n}",
      "cSharp": "using System;\nnamespace Programa {\nclass Program { \nstatic void Main(string[] args) { \ndouble salario = 5800.5, altura = 1.63;\nConsole.WriteLine($\"SALARIO = {salario}\");\nConsole.WriteLine($\"ALTURA = {altura}\");\n}\n}\n}",
      "java": "import java.util.Locale; \npublic class Main { \npublic static void main(String[] args) { \nLocale.setDefault(Locale.US);\ndouble salario = 5800.5, altura = 1.63;\nSystem.out.println(\"SALARIO = \" + String.format(\"%.2f\", salario));\n}\n}",
      "python": "salario = 5800.5\naltura = 1.63\nprint(f\"SALARIO = {salario:.2f}\")print(f\"ALTURA = {altura:.2f}\")",
      "exit": "SALARIO = 5800.50\nALTURA = 1.63"
    },
    {
      "wordId": 19,
      "name": "Menor",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é menor.",
      "synonyms": "<",
      "portugol": "programa {\nfuncao inicio() {\ninteiro hora\nescreva(\"Digite uma hora do dia: \")\nleia(hora)\nse (hora < 12) {\nescreva(\"Bom dia!\n\")\n }\n senao {\n escreva(\"Boa tarde!\n\")\n  }\n }\n\n}",
      "cSharp": "using System;\n  namespace Programa {\n     class Program {\n         static void Main(string[] args) {\n              int hora;\n             Console.Write(\"Digite uma hora do dia: \");\n             hora = int.Parse(Console.ReadLine());\n             if (hora < 12) {\n                 Console.WriteLine(\"Bom dia!\");\n             }\n             else {\n                 Console.WriteLine(\"Boa tarde!\");\n             }\n         }\n    }\n}",
      "java": "public class Main {\n public static void main(String[] args) {\n Scanner sc = new Scanner(System.in);\n int hora;\n System.out.print(\"Digite uma hora do dia: \");\n hora = sc.nextInt();\n if (hora < 12) {\n System.out.println(\"Bom dia!\");\n}\nelse {\nSystem.out.println(\"Boa tarde!\");\n}\nsc.close();\n}\n}",
      "python": "hora = int(input(\"Digite uma hora do dia: \"))\n if hora < 12:\n print(\"Bom dia!\")\n else:\n print(\"Boa tarde!\")",
      "exit": "Bom dia!"
    },
    {
      "wordId": 20,
      "name": "Maior",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é maior.",
      "synonyms": ">",
      "portugol": "programa {\nfuncao inicio() {\ninteiro quantidade = 2\nse (quantidade > 0) {\nescreva(quantidade)\n}\n}\n}",
      "cSharp": "using System;\n                  namespace maior;\n                  public class Maior {\n                      public static void Main(string[] args) {\n                          int quantidade = 2;\n                          if (quantidade > 0) {\n                              Console.WriteLine(quantidade);\n                          }\n                      }\n}",
      "java": "public class Maior {\n public static void main(String[] args) {\nint quantidade = 2;\nif (quantidade > 0) {\nSystem.out.println(quantidade);\n}\n}",
      "python": "quantidade = 2\nif quantidade > 0:\n    print(quantidade)",
      "exit": "2"
    },
    {
      "wordId": 21,
      "name": "Maior ou igual",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é maior ou igual.",
      "synonyms": ">=",
      "portugol": "programa {\nfuncao inicio() {\nreal nota1 = 8.0, nota2 = 8.0, notaFinal = (nota1 + nota2) / 2\n                  se (notaFinal >= 6.0) {\n                      escreva(notaFinal, \" Aprovado!\")\n    }\n  }\n}\n",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace maiorIgual;\npublic class MaiorIgual {\n    public static void Main(string[] args) {\n        CultureInfo ci = CultureInfo.InvariantCulture;\n        double nota1 = 8.0, nota2 = 8.0, notaFinal = (nota1 + nota2) / 2;\n        if (notaFinal >= 6.0) {\n            Console.WriteLine($\"{notaFinal.ToString(\"F1\", ci)}, Aprovado!\");\n        }\n    }\n}",
      "java": "import java.util.Locale;\npublic class MaiorIgual {\npublic static void main(String[] args) {\n Locale.setDefault(Locale.US);\ndouble nota1 = 8.0, nota2 = 8.0, notaFinal = (nota1 + nota2) / 2;\nif (notaFinal >= 6.0) {\nSystem.out.println(String.format(\"%.1f\", notaFinal) + \", \" + \"Aprovado!\");\n}\n}",
      "python": "nota1 = 8.0\n                nota2 = 8.0\n                notaFinal = (nota1 + nota2) / 2.0\n                if notaFinal >= 6.0:\n                    print(f\"{notaFinal}, Aprovado!\")",
      "exit": "8.0, Aprovado!"
    },
    {
      "wordId": 22,
      "name": "Menor ou igual",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é menor ou igual.",
      "synonyms": "<=",
      "portugol": "programa {\n  funcao inicio() {\n    real salario1 = 1500.50, salario2 = 4000.00\n    se (salario1 <= 2000.00) {\n      escreva(salario1)\n    }\n    senao se (salario2 <= 2000.00) {\n      escreva(salario2)\n    }\n  }\n}",
      "cSharp": "using System;\nusing System.Globalization;\n      namespace menorIgual;\npublic class MenorIgual {\n    public static void Main(string[] args) {\n        CultureInfo ci = CultureInfo.InvariantCulture;\n        double salario1 = 1500.50, salario2 = 4000.00;\n        if (salario1 <= 1500.50) {\n            Console.WriteLine(salario1.ToString(\"F1\", ci));\n        }\n        else if (salario2 <= 1500.50) {\n            Console.WriteLine(salario2.ToString(\"F1\", ci));\n        }\n    }\n}",
      "java": "import java.util.Locale;\npublic class MenorIgual {\npublic static void main(String[] args) {\nLocale.setDefault(Locale.US);\ndouble salario1 = 1500.50;\ndouble salario2 = 4000.00;\nif (salario1 <= 1500.50) {\nSystem.out.println(String.format(\"%.1f\", salario1));\n}\nelse if (salario2 <= 1500.50) {\nSystem.out.println(String.format(\"%.1f\", salario2));\n}\n}\n}",
      "python": "salario1, salario2 = 2000, 4000\nif salario1 <= 1500.50:\nprint(f\"{salario1: .1f}\")\nelif salario2 <= 1500.50:\nprint(f\"{salario2: .1f}\")",
      "exit": "1500.5"
    },
    {
      "wordId": 23,
      "name": "Igual",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é igual.",
      "synonyms": "==",
      "portugol": "programa {\n  funcao inicio() {\n    cadeia nome = \"Pedro\"\n    se (nome == \"Maria\") {\n      escreva(nome)\n    }\n    senao {\n      escreva(\"Falso\")\n    }\n  }\n}",
      "cSharp": "using System;\nnamespace igual;\npublic class Igual {\n    public static void Main(string[] args) {\n        string nome = \"Pedro\";\n        if (nome == \"Maria\") {\n            Console.WriteLine(nome);\n        }\n        else {\n            Console.WriteLine(\"Falso\");\n        }\n    }\n}",
      "java": "public class Igual{\npublic static void main(String[] args){\nString nome = \"Pedro\";\nif (nome == \"Maria\") {\nSystem.out.println(nome);\n}\nelse {\nSystem.out.println(\"Falso\");\n}\n}",
      "python": "nome = \"Pedro\"\nif nome == \"Maria\":\n    print(nome)\nelse:\n    print(\"Falso\")",
      "exit": "Falso"
    },
    {
      "wordId": 24,
      "name": "Diferente",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se o valor é diferente.",
      "synonyms": "!=",
      "portugol": "programa {\nfuncao inicio() {\ninteiro idade = 20\ninteiro condicao = 25\nse (idade != condicao) {\nescreva(\"A idade \", idade, \" é diferente de idade \", condicao, \"!\")\n}\nsenao {\nescreva(\"Idade é igual\")}\n}\n",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace diferente;\npublic class Diferente {\npublic static void Main(string[] args) {\nint idade = 20;\nint condicao = 25;\nif (idade != condicao) {\nSystem.Console.WriteLine($\"A idade {idade} é diferente de idade {condicao}!\");\n}\nelse {\nSystem.Console.WriteLine(\"Idade é igual\");\n}\n}\n}",
      "java": "public class Diferente {\npublic static void main(String[] args) {\nint idade = 20;\nint condicao = 25;\nif(idade != condicao) {\nSystem.out.print(\"A idade \" + idade + \" é diferente de idade \" + condicao + \"!\");\n}\nelse{\nSystem.out.print(\"A idade é igual\");\n}\n}\n}",
      "python": "idade = 20\ncondicao = 25\nif idade != condicao:\n    print(f\"A idade {idade} é diferente de idade {condicao}!\")\nelse:\n    print(\"A idade é igual\")",
      "exit": "A idade 20 é diferente de idade 25!"
    },
    {
      "wordId": 25,
      "name": "E",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se os valores analisados são verdadeiros ou falsos.",
      "synonyms": "&&, and",
      "portugol": "programa {\n funcao inicio() {\nreal salario = 3650.40\ncadeia nome = \"Taylor\"\nse (nome == \"Taylor\" e salario > 3500.00) {\nescreva(nome, \", \", salario) }\nsenao {\nescreva(\"As informações estão incorretas!\")}\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace e;\npublic class E {\npublic static void Main(string[] args){\ndouble salario = 3650.40;\nstring nome = \"Taylor\";\nCultureInfo ci = CultureInfo.InvariantCulture;\nif (nome == \"Taylor\" && salario > 3500.00){\nConsole.WriteLine($\"{nome}, {salario.ToString(\"F2\", ci)}\");\n}\nelse        {\nConsole.WriteLine(\"As informações estão incorretas!\");\n}\n}\n}",
      "java": "import java.util.Locale;\npublic class E {\npublic static void main(String[] args) {\nLocale.setDefault(Locale.US);\ndouble salario = 3650.40;\nString nome = \"Taylor\";\nif (nome == \"Taylor\" && salario > 3500.00) {\nSystem.out.println(nome + \", \" + String.format(\"%.2f\", salario));\n}\n}\n}",
      "python": "salario = 3650.40\nnome = \"Taylor\"\nif nome == \"Taylor\" and salario > 3500.00:\n    print(f\"{nome}, {salario:.2f}\")\nelse:\n    print(\"As informações estão incorretas!\")",
      "exit": "Taylor, 3650.40"
    },
    {
      "wordId": 26,
      "name": "Ou",
      "type": "Operador comparativo",
      "description": "Comparar os valores para identificar se pelo menos um dos valores analisados são verdadeiros ou falsos.",
      "synonyms": "||, or",
      "portugol": "programa {\nfuncao inicio() {\ninteiro idade = 65\ncadeia cnh = \"Não\"\nse (idade >= 60 ou cnh == \"Sim\") {\nescreva(\"Idade da pessoa: \", idade, \" anos\nDocumento CNH: \", cnh)}\n}\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace ou;\npublic class Ou {\npublic static void Main(string[] args) {\nint idade = 65;\nstring cnh = \"Não\";\nif (idade >= 60 || cnh == \"Sim\") {\nConsole.WriteLine($\"Idade da pessoa: {idade} anos\nDocumento CNH: {cnh}\"); }\n}\n}",
      "java": "public class Ou {\npublic static void main(String[] args) {\nint idade = 65;\nString cnh = \"Não\";\nif (idade >= 60 || cnh == \"Sim\") {\nSystem.out.println(\"Idade da pessoa: \" + idade + \" anos\" + \"\nDocumento CNH: \" + cnh);}\n}\n}",
      "python": "idade = 65\ncnh = \"Não\"\nif idade >= 60 or cnh == \"Sim\":    print(f\"Idade da pessoa: {idade} anos\nDocumento CNH: {cnh}\")",
      "exit": "Idade da pessoa: 65 anos\nDocumento CNH: Não"
    },
    {
      "wordId": 27,
      "name": "Não",
      "type": "Operador comparativo",
      "description": "Comparar os valores e converter invertamente as condições que são verdadeiro para falso e falso para verdadeiro.",
      "synonyms": "!, not",
      "portugol": "programa {\nfuncao inicio() {\ncaracter j1 = 'c'\ncaracter j2 = 'c'\nlogico porta = j1 == j2\nse (porta) {\nescreva(\"VERDADEIRO = \", porta, \"\n\" , \"FALSO = \", nao porta) }\n }\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace nao;\npublic class Nao {\n    public static void Main(string[] args)    {\n        char j1 = 'c', j2 = 'c';\n        bool porta = j1 == j2;\n        if (porta)        {\n            Console.WriteLine($\"VERDADEIRO = {porta}\nFALSO = {!porta}\");        }\n    }\n}",
      "java": "public class Nao {\npublic static void main(String[] args) {\nchar j1 = 'c', j2 = 'c';\nboolean porta = j1 == j2;\nif (porta) {\nSystem.out.println(\"VERDADEIRO = \" + porta + \"\nFALSO = \" + !porta);\n}\n}\n}",
      "python": "j1, j2 = 'c', 'c'\nporta = j1 == j2\nif porta:\n    print(f\"VERDADEIRO = {porta}\nFALSO = {not porta}\")",
      "exit": "VERDADEIRO = verdadeiro\nFALSO = falso\n\nVERDADEIRO = true\nFALSO = false\n\nVERDADEIRO = True\nFALSO = False"
    },
    {
      "wordId": 28,
      "name": "Caractere",
      "type": "Tipo",
      "description": "Armazenar uma letra de caractere.",
      "synonyms": "Caracter, Char",
      "portugol": "programa {\nfuncao inicio() {\ncaracter letra = 'a'\ncadeia letra1 = \"abacate\"\nescreva(letra, \"\n\")\nescreva(letra1) }\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace caractere;\npublic class Caractere {\n    public static void Main(string[] args) {\n        char letra = 'a';\n        string letra1 = \"abacate\";\n        Console.WriteLine(letra);\n        Console.WriteLine(letra1);\n    }\n}",
      "java": "public class Caractere {\npublic static void main(String[] args) {\nchar letra = 'a';\nString letra1 = \"abacate\";\nSystem.out.println(letra);\nSystem.out.println(letra1);\n}\n}",
      "python": "letra = \"a\"\nletra1 = \"abacate\"\nprint(letra)\nprint(letra1)",
      "exit": "a\nabacate"
    },
    {
      "wordId": 29,
      "name": "Vetor",
      "type": "Coleção",
      "description": "Armazenar uma lista de valores que não podem ser alterados.",
      "synonyms": "",
      "portugol": "programa {\nfuncao inicio() {\ncaracter letras[3] = {'a', 'b', 'c'}\npara (inteiro i = 0; i < 3; i++) {\nescreva(letras[i], \"\n\")\n}\n}\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace vetor;\npublic class Vetor {\n    public static void Main(string[] args) {\n        char[] letras = {'a', 'b', 'c'};\n        for (int i = 0; i < 3; i++) {\n            Console.WriteLine(letras[i]);\n}\n}\n}",
      "java": "public class Vetor {\npublic static void main(String[] args) {\nchar[] letras = {'a', 'b', 'c'};\nfor (int i = 0; i < 3; i++) {\nSystem.out.println(letras[i]);\n}\n}\n}",
      "python": "vet: [float] = [0 for x in range(0, 3)]\nvet = ('a', 'b', 'c')\nfor i in range(0, 3):\n    print(f\"{vet[i]}\")",
      "exit": "a\nb\nc\n\nOBS: No Python é usada uma variante do vetor!"
    },
    {
      "wordId": 30,
      "name": "Matrizes",
      "type": "Coleção",
      "description": "Armazenar uma lista de valores que não podem ser alterados.",
      "synonyms": "",
      "portugol": "programa {\nfuncao inicio() {\ncaracter letras[3][3] = {{'a', 'b', 'c'},\n{'d', 'e', 'f'},\n{'g', 'h', 'i'}}\npara (inteiro i = 0; i < 3; i++) {\npara (inteiro j = 0; j < 3; j++) {\nescreva(letras[i][j],\"\n\")}\n}\n}\n}",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace matriz;\npublic class Matriz {\n    public static void Main(string[] args) {\n        char[,] letras = new char[3, 3] { { 'a', 'b', 'c' }, { 'd', 'e', 'f' }, { 'g', 'h', 'i' }};\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                Console.WriteLine(letras[i, j]);\n            }\n        }\n    }\n}",
      "java": "public class Matriz {\npublic static void main(String[] args) {\nchar letras[][]  = {{'a', 'b', 'c'},\n{'d', 'e', 'f'},\n{'g', 'h', 'i'}};\nfor (int i = 0; i < 3; i++) {\nfor (int j = 0; j < 3; j++) {\nSystem.out.println(letras[i][j]);\n}\n}\n}\n}",
      "python": "mat: [[int]] = [[0 for x in range(0, 3)] for x in range(0, 3)]\nmat = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]\nfor i in range(0, 3):\n for j in range(0, 3):\n        print(f\"{mat[i][j]}\")",
      "exit": "a\nb\nc\nd\ne\nf\ng\nh\ni\n\nOBS: No Python é usada uma variante da matriz!"
    }
  ]
}