{
  "words": [
    {
      "wordId": 1,
      "name": "Escreva",
      "type": "Função ou Método",
      "description": "Mostrar algo na tela.",
      "synonyms": "Print, Console.Write, System.out.println.",
      "portugol":"Algoritmo \"Escreva\"\nInicio\n   escreva(\"Ola, mundo!\")\nFimalgoritmo",
      "cSharp": "using System;\nnamespace escreva;\n   class Escreva {\n       static void Main(string[]args) {\n           Console.WriteLine(\"Olá, mundo!\");\n       }\n   }\n}",
      "java": "public class Main {\n   public static void main(String[] args) {\n      System.out.println(\"Olá, mundo!\");\n   }\n}",
      "python": "print('Olá, mundo!')\nprint(\"Olá, mundo!\")",
      "exit": "Olá, mundo!"
    },
    {
      "wordId": 2,
      "name": "Leia",
      "type": "Função ou Método",
      "description": "A variável será lida pelo que foi recebida do escreva.",
      "synonyms": "Input, System.out.println, Console.Read.",
      "portugol": "Algoritmo \"Leia\"\nVar\n   texto : caractere\nInicio\n   escreva(\"Digite um texto: \")\n   leia(texto)\n   escreva(\"O texto digitado foi: \", texto)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace leia;\n   class Leia {\n       static void Main(string[] args) {\n           Console.WriteLine(\"Digite um texto: \");\nstring? texto = Console.ReadLine();\nConsole.WriteLine($\"O texto digitado foi: {texto}\");\n       }\n   }\n}",
      "java": "import java.util.Scanner;\nclass Texto {\n   public static void main(String[] args) {\n      Scanner obj = new Scanner(System.in);\n      System.out.println(\"Digite um texto: \");\n      String texto = obj.nextLine();\n      System.out.println(\"O texto digitado foi: \" + texto);\n   }\n}",
      "python": "texto = input(\"Digite um texto: \")\nprint(f\"O texto digitado foi: {texto}\")",
      "exit": "O texto digitado foi: Exemplo"
    },
    {
      "wordId": 3,
      "name": "Adição",
      "type": "Operador aritmético",
      "description": "Operador para somar as variáveis.",
      "synonyms": "+",
      "portugol": "Algoritmo \"Soma\"\nVar\n   a, b : inteiro\nInicio\n   a <- 1\n b <- 2\n   escreva(a + b)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace soma;\npublic class Soma {\n   public static void Main(string[] args) {\n      int a = 1, b = 2;\n      Console.WriteLine(a + b);    }\n}",
      "java": "public class Soma {\n   public static void main(String[] args) {\n      int a = 1, b = 2;\n      System.out.println(a + b);\n   }\n}",
      "python": "a = 1\nb = 2\nprint($'{a} + {b}')",
      "exit": "3"
    },
    {
      "wordId": 4,
      "name": "Subtração",
      "type": "Operador aritmético",
      "description": "Operador para subtrair as variáveis.",
      "synonyms": "-",
      "portugol": "Algoritmo \"Subtracao\"\nVar\n   a, b : inteiro\nInicio\n   a <- 2\n   b <- 1\n   escreva(a - b)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace subtracao;\npublic class Subtracao {\n   public static void Main(string[] args) {\n      int a = 2, b = 1;\n      Console.WriteLine(a - b);    }\n}",
      "java": "public class Subtracao {\npublic static void main(String[] args) {\n      int a = 2, b = 1;\n      System.out.println(a - b);\n   }\n}",
      "python": "a = 2\nb = 1\nprint($'{a} - {b}')",
      "exit": "1"
    },
    {
      "wordId": 5,
      "name": "Divisão",
      "type": "Operador aritmético",
      "description": "Operador para dividir as variáveis.",
      "synonyms": "/",
      "portugol": "Algoritmo \"Divisao\"\nVar\n  a, b : inteiro\nInicio\n a <- 1\n b <- 1\n escreva(a / b)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace divisao;\npublic class Divisao {\n   public static void Main(string[] args) {\n      int a = 1, b = 1;\n      Console.WriteLine(a / b);\n   }\n}",
      "java": "public class Divisao {\npublic static void main(String[] args) {\n      int a = 1, b = 1;\n      System.out.println(a / b);\n   }\n}",
      "python": "a = 1\nb = 1\nprint($'{a} / {b}')",
      "exit": "1"
    },
    {
      "wordId": 6,
      "name": "Multiplicação",
      "type": "Operador aritmético",
      "description": "Operador para multiplicar as variáveis.",
      "synonyms": "*",
      "portugol": "Algoritmo \"Multiplicacao\"\nVar\n  a, b : inteiro\nInicio\n a <- 10\n b <- 10\n escreva(a * b)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace multiplicacao;\npublic class Multiplicacao {\n   public static void Main(string[] args) {\n      int a = 10, b = 10;\n      Console.WriteLine(a * b);\n   }\n}",
      "java": "public class Multiplicacao {\n   public static void main(String[] args) {\n      int a = 10, b = 10;\n      System.out.println(a * b);\n}\n}",
      "python": "a = 10\nb = 10\nprint($'{a} * {b}')",
      "exit": "100"
    },
    {
      "wordId": 7,
      "name": "Módulo",
      "type": "Operador aritmético",
      "description": "Operador contém como resultado final o resto da divisão.",
      "synonyms": "%, mod",
      "portugol": "Algoritmo \"Modulo\"\nVar\n  a, b : inteiro\nInicio\n a <- 5\n b <- 2\n escreva(a % b)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace modulo;\nclass Modulo {\nstatic void Main(string[] args) {\n        int x = 5, y = 2;\n        Console.WriteLine(x % y);\n      }\n   }\n}",
      "java": "public class Modulo {\n   public static void main(String[] args) {\nint x = 5, y = 2;\n      System.out.println(x % y);\n   }\n}",
      "python": "x = 5\ny = 2\nprint(x % y)\n",
      "exit": "1"
    },
    {
      "wordId": 8,
      "name": "Se",
      "type": "Estrutura Condicional",
      "description": "Avaliar se a expressão é verdadeira ou falsa.",
      "synonyms": "If",
      "portugol": "Algoritmo \"Se\"\nVar\n    hora : inteiro\nInicio\n    se 20 > 18 entao\n       escreval(\"20 é maior que 18!\")\n    fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace se;\npublic class Se {\n    public static void Main(string[] args) {\n        if (20 > 18) {\n            Console.WriteLine(\"20 é maior que 18!\");\n        }\n    }\n}",
      "java": "public class Se {\n   public static void main(String[] args) {\n      if (20 > 18) {\n   System.out.println(\"20 é maior que 18!\");\n      }\n   }\n}",
      "python": "if 20 > 18:\nprint('20 é maior que 18')\nprint(\"20 é maior que 18!\")",
      "exit": "20 é maior que 18!"
    },
    {
      "wordId": 9,
      "name": "Se Senão",
      "type": "Estrutura Condicional",
      "description": "Caso a estrutura condicional se é falsa é feita a segunda verificação caso a expressão é verdadeira ou falsa.",
      "synonyms": "Else",
      "portugol": "Algoritmo \"SeSenao\"\nInicio\n   se 20 < 18 entao\n      escreva(\"FALSO\")\n   senao\n      escreva(\"VERDADEIRO\")\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace se_senao;\n   public class SeSenao {\n      public static void Main(string[] args) {\n         int a = 20;\n         if (a < 18) {\n         Console.WriteLine(\"FALSO\");\n}\n        else {\n         Console.WriteLine(\"VERDADEIRO\");\n         }      }\n}",
      "java": "class SeSenao {\n   public static void main(String[] args) {\n      int a = 20, b = 18;\n      if (a < b) {\n         System.out.println(\"FALSO\");\n}\n      else {\n         System.out.println(\"VERDADEIRO\");\n}\n}\n}\n",
      "python": "if 20 < 18:\n    print('FALSO')\nelse:\n    print('VERDADEIRO')",
      "exit": "VERDADEIRO"
    },
    {
      "wordId": 10,
      "name": "Senão se",
      "type": "Estrutura Condicional",
      "description": "A primeira e segunda verificação são falsas será realizada a terceira retornando verdadeira ou falsa.",
      "synonyms": "Else if, Elif",
      "portugol": "Algoritmo \"Senao Se\"\nVar\n   a, b : inteiro\nInicio\n   a <- 1\n   b <- 2\n   se a = b entao\n      escreval(a, \" são IDÊNTICOS\", b)\n   senao\n      se (a < b) entao\n         escreval(a, \" é MENOR que\", b)\n   senao\n      escreval(a, \" são DIFERENTES\", b)\n      fimse\n   fimse\nFimalgoritmo",
      "cSharp": "using System\nnamespace senao_se;\nclass SenaoSe {\n   public static void Main(String[] args){\n      int a = 1, b = 2;\n      if(a == b){\n         Console.WriteLine($\"{a} são IDÊNTICOS {b}!\");}\n      else if (a < b){\n         Console.WriteLine($\"{a} é MENOR que {b}!\");}\n      else{\n         Console.WriteLine($\"{a} são DIFERENTES {b}!\");}\n}\n}",
      "java": "class SenaoSe {\npublic static void main(String[] args) {\nint a = 1;\nint b = 2;\nif (a == b) {\nSystem.out.println(a + \"são IDÊNTICOS\" + b + \"!\");}\n else if (a < b){\nSystem.out.println(a+\" é MENOR que \"+b+\"!\");\n}\nelse {\nSystem.out.println(\"Os valores são diferentes\");\n}\n}\n}",
      "python": "a = 1\nb = 2\nif (a == b):\n   print(f'{a} são IDÊNTICOS {b}!')\nelif (a < b):\n   print(f'{a} é MENOR que {b}!')\nelse:\n   print(f'{a} são DIFERENTES {b}!')",
      "exit": "1 é MENOR que 2!"
    },
    {
      "wordId": 11,
      "name": "Para",
      "type": "Estrutura de Repetição",
      "description": "Laço de repetição que percorre os itens armazenados em uma coleção.",
      "synonyms": "For",
      "portugol": "Algoritmo \"Para\"\nVar\n   i : inteiro\nInicio\n   para i de 0 ate 4 faca\n      escreval(i)\n   fimpara\nFimalgoritmo",
      "cSharp": "using System;\nnamespace para;\n   public class Para {\n      static void Main(string[] args){\n         for (int i = 0; i < 5; i++) {\n            Console.WriteLine(i);\n            }\n         }\n      }\n}",
      "java": "public class Para {\n   public static void main(String[] args) {\n      for (int i = 0; i < 5; i++) {\n         System.out.println(i);\n         }\n      }\n}",
      "python": "for i in range(5):\n   print(i)",
      "exit": "0\n1\n2\n3\n4"
    },
    {
      "wordId": 12,
      "name": "Enquanto",
      "type": "Estrutura de Repetição",
      "description": "Laço de repetição que depende de uma condição.",
      "synonyms": "While",
      "portugol": "Algoritmo \"Enquanto\"\nVar\n   i : inteiro\nInicio\n   i <- 1\n   enquanto i < 5 faca\n      escreval(i)\n      i <- i + 1\n   fimenquanto\nFimalgoritmo",
      "cSharp": "using System;\nnamespace enquanto;\n   class Enquanto {\n      static void Main(string[] args) {\n         int i = 1;\n         while (i < 5) {\n            Console.WriteLine(i);\n            i++;\n            }\n         }\n      }\n}",
      "java": "public class Enquanto {\n   public static void main(String[] args) {\n      int i = 1;\n      while (i < 5) {\n         System.out.println(i);\ni++;\n         }\n      }\n}",
      "python": "i = 1\nwhile i < 5:\n   print(i)\n   i += 1",
      "exit": "1\n2\n3\n4"
    },
    {
      "wordId": 13,
      "name": "Texto",
      "type": "Tipo",
      "description": "Armazenar dezena de caracteres como sentenças, nomes etc.",
      "synonyms": "String, Caractere, String?",
      "portugol": "Algoritmo \"Texto\"\nVar\n   texto : caractere\nInicio\n      escreva(\"Digite o texto: \")\n   leia(texto)\n   escreva(\"O texto digitado foi: \", texto)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace texto;\nclass Texto {\n   static void Main(string[] args) {\n      Console.Write(\"Digite o texto: \");\n      string? texto = Console.ReadLine();\nConsole.WriteLine($\"O texto digitado foi: {texto}\");\n      }\n   }\n}",
      "java": "import java.util.Scanner;\npublic class Texto {\n   public static void main(String[] args) {\n      Scanner s = new Scanner(System.in);\n      System.out.print(\"Digite o texto: \");\n      String texto = s.nextLine();\n      System.out.println(\"O texto digitado foi: \" + texto);\ns.close();\n   }\n}",
      "python": "texto = input('Digite o texto: ')\nprint(f'O texto digitado foi: {texto}')",
      "exit": "O texto digitado foi: Exemplo"
    },
    {
      "wordId": 14,
      "name": "Caractere",
      "type": "Tipo",
      "description": "Armazenar uma letra de caractere.",
      "synonyms": "Caracter, Char",
      "portugol": "Algoritmo \"Caractere\"\nVar\n   letra : caractere\nInicio\n      letra <- \"a\"\n      escreva(letra)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace caractere;\npublic class Caractere {\n   public static void Main(string[] args) {\n         char letra = 'a';\n        Console.WriteLine(letra);\n    }\n}",
      "java": "public class Caractere {\n   public static void main(String[] args) {\n      char letra = 'a';\n      System.out.println(letra);\n   }\n}",
      "python": "letra = \"a\"\nprint(letra)",
      "exit": "a"
    },
    {
      "wordId": 15,
      "name": "Inteiro",
      "type": "Tipo Primitivo",
      "description": "Exibir somente os números inteiros na tela.",
      "synonyms": "Int",
      "portugol": "Algoritmo \"Inteiro\"\nVar\n   numero : inteiro\nInicio\n      numero <- 5\n      escreva(numero)\nFimalgoritmo",
      "cSharp": "using System;\nnamespace inteiro;\n   class Inteiro {\n      static void Main(string[] args) {\n         int numero = 5;\n         Console.WriteLine(numero)\n         }\n      }\n}",
      "java": "public class Inteiro {\n   public static void main(String[] args) {\n      int numero = 5;\n      System.out.println(numero);\n   }\n}",
      "python": "numero = 5\nprint(numero)",
      "exit": "5"
    },
    {
      "wordId": 16,
      "name": "Real",
      "type": "Tipo Primitivo",
      "description": "Mostrar somente os números reais na tela.",
      "synonyms": "Double, Float",
      "portugol": "Algoritmo \"Inteiro\"\nVar\n   salario, altura : real\nInicio\n   salario <- 5800.5\n   altura <- 1.63\n   escreva(\"SALARIO = \", salario:8:2, \"\n\")\n   escreva(\"ALTURA = \", altura:8:2, \"\n\")\nFimalgoritmo",
      "cSharp": "using System;\nnamespace real;\nclass Real {\n   static void Main(string[] args) {\n      double salario = 5800.5, altura = 1.63;\n      Console.WriteLine($\"SALARIO = {salario}\");\n      Console.WriteLine($\"ALTURA = {altura}\");\n      }\n   }\n}",
      "java": "import java.util.Locale;\npublic class Main {\n   public static void main(String[] args) {\n      Locale.setDefault(Locale.US);\n      double salario = 5800.5, altura = 1.63;\n      System.out.println(\"SALARIO = \" + String.format(\"%.2f\", salario));\n      System.out.println(\"ALTURA = \" + String.format(\"%.2f\", altura));\n      }\n}",
      "python": "salario = 5800.5\naltura = 1.63\nprint(f\"SALARIO = {salario:.2f}\")\nprint(f\"ALTURA = {altura:.2f}\")",
      "exit": "SALARIO = 5800.50\nALTURA = 1.63"
    },
    {
      "wordId": 17,
      "name": "Menor",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é menor.",
      "synonyms": "<",
      "portugol": "Algoritmo \"Menor\"\nVar\n   hora : inteiro\nInicio\n   escreva(\"Digite uma hora do dia: \")\n   leia(hora)\n   se hora < 12 entao\n      escreva(\"Bom dia!\")\n   senao\n      escreva(\"Boa tarde!\")\n  fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace menor;\nclass Menor {\n   static void Main(string[] args) {\n              int hora;\n             Console.Write(\"Digite uma hora do dia: \");\n             hora = int.Parse(Console.ReadLine());\n             if (hora < 12) {\n                 Console.WriteLine(\"Bom dia!\");\n             }\n             else {\n                 Console.WriteLine(\"Boa tarde!\");\n         }\n      }\n   }\n}",
      "java": "public class Menor {\n   public static void main(String[] args) {\n      Scanner s = new Scanner(System.in);\n      int hora;\n       System.out.print(\"Digite uma hora do dia: \");\n       hora = sc.nextInt();\n      if (hora < 12) {\n         System.out.println(\"Bom dia!\");\n         }\n      else {\n         System.out.println(\"Boa tarde!\");\n         }\n      s.close();\n      }\n}",
      "python": "hora = int(input(\"Digite uma hora do dia: \"))\nif hora < 12:\n   print(\"Bom dia!\")\nelse:\n   print(\"Boa tarde!\")",
      "exit": "Bom dia!"
    },
    {
      "wordId": 18,
      "name": "Maior",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é maior.",
      "synonyms": ">",
      "portugol": "Algoritmo \"Maior\"\nVar\n   quantidade : inteiro\nInicio\n   quantidade <- 2\n   se quantidade > 0 entao\n      escreva(quantidade)\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace maior;\npublic class Maior {\n   public static void Main(string[] args) {\n      int quantidade = 2;\n      if (quantidade > 0) {\n         Console.WriteLine(quantidade);\n      }\n}",
      "java": "public class Maior {\n   public static void main(String[] args) {\n      int quantidade = 2;\n      if (quantidade > 0) {\n         System.out.println(quantidade);\n      }\n}",
      "python": "quantidade = 2\nif quantidade > 0:\n    print(quantidade)",
      "exit": "2"
    },
    {
      "wordId": 19,
      "name": "Maior ou igual",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é maior ou igual.",
      "synonyms": ">=",
      "portugol": "Algoritmo \"MaiorIgual\"\nVar\n   nota1, nota2, media : real\nInicio\n   nota1 <- 8.0\n   nota2 <- 8.0\n   media <- (nota1 + nota2) / 2.0\n   se media >= 6.0 entao\n      escreva(media:3:1, \", Aprovado!\")\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace maiorIgual;\npublic class MaiorIgual {\n   public static void Main(string[] args) {\n      CultureInfo ci = CultureInfo.InvariantCulture;\n      double nota1 = 8.0, nota2 = 8.0, media = (nota1 + nota2) / 2.0;\n      if (media >= 6.0) {\n         Console.WriteLine($\"{media.ToString(\"F1\", ci)}, Aprovado!\");\n      }\n   }\n}",
      "java": "import java.util.Locale;\npublic class MaiorIgual {\n   public static void main(String[] args) {\n      Locale.setDefault(Locale.US);\n      double nota1 = 8.0, nota2 = 8.0, media = (nota1 + nota2) / 2.0;\n      if (media >= 6.0) {\n         System.out.println(String.format(\"%.1f\", media) + \", \" + \"Aprovado!\");\n      }\n}",
      "python": "nota1 = 8.0\nnota2 = 8.0\nmedia = (nota1 + nota2) / 2.0\nif media >= 6.0:\n   print(f\"{notaFinal}, Aprovado!\")",
      "exit": "8.0, Aprovado!"
    },
    {
      "wordId": 20,
      "name": "Menor ou igual",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é menor ou igual.",
      "synonyms": "<=",
      "portugol": "Algoritmo \"MenorIgual\"\nVar\n   salario1, salario2 : real\nInicio\n   salario1 <- 1550.50\n   salario2 <- 4000.00\n   se salario1 <= 1500.50 entao\n      escreva(salario1:5:2)\n   senao\n      se salario2 <= 1500.50 entao\n         escreva(salario2:5:2)\n      fimse\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace menorIgual;\npublic class MenorIgual {\n   public static void Main(string[] args) {\n      CultureInfo ci = CultureInfo.InvariantCulture;\n      double salario1 = 1500.50, salario2 = 4000.00;\n      if (salario1 <= 1500.50) {\n         Console.WriteLine(salario1.ToString(\"F1\", ci));\n        }\n        else if (salario2 <= 1500.50) {\n            Console.WriteLine(salario2.ToString(\"F1\", ci));\n        }\n    }\n}",
      "java": "import java.util.Locale;\npublic class MenorIgual {\n   public static void main(String[] args) {\n      Locale.setDefault(Locale.US);\n      double salario1 = 1500.50, salario2 = 4000.00;\n      if (salario1 <= 1500.50) {\n         System.out.println(String.format(\"%.1f\", salario1));\n}\n      else if (salario2 <= 1500.50) {\n         System.out.println(String.format(\"%.1f\", salario2));\n      }\n   }\n}",
      "python": "salario1 = 1500.50\nsalario2 = 4000.00\nif salario1 <= 1500.50:\n   print(f\"{salario1:.2f}\")\nelif salario2 <= 1500.50:\n   print(f\"{salario2:.2f}\")",
      "exit": "1500.50"
    },
    {
      "wordId": 21,
      "name": "Igual",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é igual.",
      "synonyms": "=, ==",
      "portugol": "Algoritmo \"Igual\"\nVar\n   nome : caractere\nInicio\n   nome <- \"Pedro\"\n   se nome = \"Maria\" entao\n      escreva(nome)\n   senao\n      escreva(\"FALSO\")\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace igual;\npublic class Igual {\n   public static void Main(string[] args) {\n      string nome = \"Pedro\";\n      if (nome == \"Maria\") {\n         Console.WriteLine(nome);\n      }\n      else {\n         Console.WriteLine(\"FALSO\");\n      }\n   }\n}",
      "java": "public class Igual {\n   public static void main(String[] args){\n      String nome = \"Pedro\";\n      if (nome == \"Maria\") {\n         System.out.println(nome);\n      }\n      else {\n         System.out.println(\"FALSO\");\n      }\n}",
      "python": "nome = \"Pedro\"\nif nome == \"Maria\":\n   print(nome)\nelse:\n   print(\"FALSO\")",
      "exit": "FALSO"
    },
    {
      "wordId": 22,
      "name": "Diferente",
      "type": "Operador Relacional",
      "description": "Comparar os valores para identificar se o valor é diferente.",
      "synonyms": "<>, !=",
      "portugol": "Algoritmo \"Diferente\"\nVar\n   idade : inteiro\nInicio\n   idade <- 20\n   se idade <> 25 entao\n      escreva(\"Diferentes\")\n   senao\n      escreva(\"Idênticos\")\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace diferente;\npublic class Diferente {\n   public static void Main(string[] args) {\n      int idade = 20;\n      if (idade != 25) {\n         System.Console.WriteLine(\"Diferentes\");\n      }\n      else {\n         System.Console.WriteLine(\"Idênticos\");\n      }\n   }\n}",
      "java": "public class Diferente {\n   public static void main(String[] args) {\n      int idade = 20;\n      if(idade != 25) {\n         System.out.print(\"Diferentes\");\n      }\n      else{\n         System.out.print(\"Idênticos\");\n      }\n   }\n}",
      "python": "idade = 20\nif idade != 25:\n   print(\"Diferentes\")\nelse:\n   print(\"Idênticos\")",
      "exit": "Diferentes"
    },
    {
      "wordId": 23,
      "name": "E",
      "type": "Operador Lógico",
      "description": "Comparar os valores para identificar se os valores analisados são verdadeiros ou falsos.",
      "synonyms": "&&, and",
      "portugol": "Algoritmo \"E\"\nVar\n   salario : real\n   nome : caractere\nInicio\n   salario <- 3650.40\n   nome <- \"Taylor\"\n   se (nome = \"Taylor\") e (salario > 3500.00) entao\n      escreva(nome, \", \", salario:5:2)\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nusing System.Globalization;\nnamespace e;\npublic class E {\n   public static void Main(string[] args){\n      double salario = 3650.40;\n      string nome = \"Taylor\";\n      CultureInfo ci = CultureInfo.InvariantCulture;\n      if (nome == \"Taylor\" && salario > 3500.00){\n         Console.WriteLine($\"{nome}, {salario.ToString(\"F2\", ci)}\");\n      }\n   }\n}",
      "java": "import java.util.Locale;\npublic class E {\n   public static void main(String[] args) {\n      Locale.setDefault(Locale.US);\n      double salario = 3650.40;\n      String nome = \"Taylor\";\n      if (nome == \"Taylor\" && salario > 3500.00) {\n         System.out.println(nome + \", \" + String.format(\"%.2f\", salario));\n      }\n   }\n}",
      "python": "salario = 3650.40\nnome = \"Taylor\"\nif nome == \"Taylor\" and salario > 3500.00:\n    print(f\"{nome}, {salario:.2f}\")",
      "exit": "Taylor, 3650.40"
    },
    {
      "wordId": 24,
      "name": "Ou",
      "type": "Operador Lógico",
      "description": "Comparar os valores para identificar se pelo menos um dos valores analisados são verdadeiros ou falsos.",
      "synonyms": "||, or",
      "portugol": "Algoritmo \"Ou\"\nVar\n   idade : inteiro\n   cnh : caractere\nInicio\n   idade <- 65\n   cnh <- \"Não\"\n   se (idade >= 60) ou (cnh = \"Sim\") entao\n      escreval(\"Idade da pessoa:\", idade, \" anos\")\n      escreval(\"Documento CNH: \", cnh)\n   fimse\nFimalgoritmo",
      "cSharp": "using System;\nnamespace ou;\npublic class Ou {\n   public static void Main(string[] args) {\n      int idade = 65;\n      string cnh = \"Não\";\n      if (idade >= 60 || cnh == \"Sim\") {\n         Console.WriteLine($\"Idade da pessoa: {idade} anos\nDocumento CNH: {cnh}\");      }\n   }\n}",
      "java": "public class Ou {\n   public static void main(String[] args) {\n      int idade = 65;\n      String cnh = \"Não\";\n      if (idade >= 60 || cnh == \"Sim\") {\n         System.out.println(\"Idade da pessoa: \" + idade + \" anos\" + \"\nDocumento CNH: \" + cnh);      }\n   }\n}",
      "python": "idade = 65\ncnh = \"Não\"\nif idade >= 60 or cnh == \"Sim\":\n   print(f\"Idade da pessoa: {idade} anos\nDocumento CNH: {cnh}\")",
      "exit": "Idade da pessoa: 65 anos\nDocumento CNH: Não"
    },
    {
      "wordId": 25,
      "name": "Não",
      "type": "Operador Lógico",
      "description": "Comparar os valores e converter invertamente as condições que são verdadeiro para falso e falso para verdadeiro.",
      "synonyms": "!, not",
      "portugol": "Algoritmo \"Nao\"\nVar\n   p1, p2 : caractere\nInicio\n   p1 <- \"c\"\n   p2 <- \"c\"\n   escreval(p1 = p2)\nescreval(nao(p1 = p2))\nFimalgoritmo",
      "cSharp": "using System;\nnamespace nao;\npublic class Nao {\n   public static void Main(string[] args) {\n      char p1 = 'c', p2 = 'c';\n      Console.WriteLine(p1 == p2);\nConsole.WriteLine(!(p1 == p2))    }\n}",
      "java": "public class Nao {\n   public static void main(String[] args) {\n      char p1 = 'c', p2 = 'c';\n      System.out.println(j1 == j2);\n      System.out.println(!(j1 == j2));\n   }\n}",
      "python": "p1, p2 = 'c', 'c'\nprint(p1 == p2)\nprint(not(p1 == p2))",
      "exit": "Portugol:\nVERDADEIRO\nFALSO\n\nC#:\nTrue\nFalse\n\nJava:\ntrue\nfalse\n\nPython:\nTrue\nFalse\n\nOBS: As saídas do Portugol e Java diferentes, enquanto no C# e Python iguais!"
    },
    {
      "wordId": 26,
      "name": "Lista",
      "type": "Coleção",
      "description": "Uma lista armazena vários dados usando [] e a separação por vírgula ,.",
      "synonyms": "ArrayList<>, List<>, []",
      "portugol": "Algoritmo \"Lista\"\nVar\n   i : inteiro\n   nome : vetor [0..2] de caractere\nInicio\n   nome[0] <- \"João\"\n   nome[1] <- \"Maria\"\n   nome[2] <- \"Pedro\"\n   para i de 0 ate 3-1 faca\n      escreval(nome[i])\n   fimpara\nFimalgoritmo",
      "cSharp": "using System; namespace lista;\nclass Lista {\n   static void Main(String[] args) {\n      List<String> names = [\"João\", \"Maria\", \"Pedro\"];\n      foreach (String name in names) { Console.Write($\"{name} \"); }\n   }\n}",
      "java": "import java.util.ArrayList;\npublic class Lista {\n   public static void main(String[] args) {\n      ArrayList<String> nome = new ArrayList<String>();\n      nome.add(\"João\");\n      nome.add(\"Maria\");\n      nome.add(\"Pedro\");\n      System.out.println(nome);\n   }\n}",
      "python": "list = ['João', 'Maria', 'Pedro']\nprint(list[0:3])",
      "exit": "Portugol:\nJoão\nMaria\nPedro\n\nC#:\nJoão Maria Pedro\n\nJava:\n[João, Maria, Pedro]\n\nPython:\n['João', 'Maria', 'Pedro']\n\nOBS:\n1- Portugol e Java são usadas as variantes da lista!\n2- As saídas das linguagens de programação são diferentes!"
    },
    {
      "wordId": 27,
      "name": "Vetor",
      "type": "Coleção",
      "description": "Armazenar uma lista de valores que não podem ser alterados.",
      "synonyms": "[]",
      "portugol": "Algoritmo \"Vetor\"\nVar\n   i : inteiro\n   vet : vetor [0..2] de caractere\nInicio\n   vet[0] <- \"a\"\n   vet[1] <- \"b\"\n   vet[2] <- \"c\"\n   para i de 0 ate 3-1 faca\n      escreval(vet[i])\n   fimpara\nFimalgoritmo",
      "cSharp": "using System;\nnamespace vetor;\npublic class Vetor {\n   public static void Main(string[] args) {\n      char[] letras = {'a', 'b', 'c'};\n      for (int i = 0; i < 3; i++) {\n         Console.WriteLine(letras[i]);\n      }\n   }\n}",
      "java": "public class Vetor {\n   public static void main(String[] args) {\n      char[] letras = {'a', 'b', 'c'};\n      for (int i = 0; i < 3; i++) {\n         System.out.println(letras[i]);\n      }\n   }\n}",
      "python": "vet: [float] = [0 for x in range(0, 3)]\nvet = ('a', 'b', 'c')\nfor i in range(0, 3):\n   print(f\"{vet[i]}\")",
      "exit": "a\nb\nc\n\nOBS: No Python é usada uma variante do vetor!"
    },
    {
      "wordId": 28,
      "name": "Matrizes",
      "type": "Coleção",
      "description": "Armazenar várias listas de valores que não podem ser alterados.",
      "synonyms": "[][], [,], [[]]",
      "portugol": "Algoritmo \"Matriz\"\nVar\n   i, j : inteiro\n   mat: vetor [0..2, 0..2] de inteiro\nInicio\n   mat[0, 0] <- 1\n   mat[0, 1] <- 2\n    mat[1, 0] <- 3\n    mat[1, 1] <- 4\n   para i de 0 ate 2-1 faca\n      para j de 0 ate 2-1 faca\n         escreva(mat[i, j], \" \")\n      fimpara\n   fimpara\nFimalgoritmo",
      "cSharp": "using System;\nnamespace matriz;\npublic class Matriz {\n   public static void Main(string[] args) {\n      int[,] mat = new int[2, 2] { {1, 2}, {3, 4} };\n      for (int i = 0; i < 2; i++) {\n         for (int j = 0; j < 2; j++) {\n            Console.WriteLine(mat[i, j]);\n            }\n         }\n      }\n}",
      "java": "public class Matriz {\n   public static void main(String[] args) {\n      int mat[][]  = {{1, 2}, {3, 4}};\n      for (int i = 0; i < 2; i++) {\n         for (int j = 0; j < 2; j++) {\n            System.out.println(letras[i][j]);\n            }\n         }\n         }\n}",
      "python": "mat: [[int]] = [[0 for x in range(0, 2)] for x in range(0, 2)]\nmat = [[1, 2], [3, 4]]\nfor i in range(0, 2):\n   for j in range(0, 2):\n      print(f\"{mat[i][j]}\")",
      "exit": "1\n2\n3\n4\n\bOBS:\b No Python é usada uma variante da matriz!"
    }
  ]
}